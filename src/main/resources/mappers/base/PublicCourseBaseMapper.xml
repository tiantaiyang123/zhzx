<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhzx.server.repository.base.PublicCourseBaseMapper">
    <resultMap id="BaseResultMap" type="com.zhzx.server.domain.PublicCourse">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="academic_year_semester_id" jdbcType="BIGINT" property="academicYearSemesterId" />
        <result column="schoolyard_id" jdbcType="BIGINT" property="schoolyardId" />
        <result column="grade_id" jdbcType="BIGINT" property="gradeId" />
        <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
        <result column="sort_order" jdbcType="VARCHAR" property="sortOrder" />
        <result column="course_name" jdbcType="VARCHAR" property="courseName" />
        <result column="clazz_id" jdbcType="VARCHAR" property="clazzId" />
        <result column="clazz_name" jdbcType="VARCHAR" property="clazzName" />
        <result column="teacher_id" jdbcType="BIGINT" property="teacherId" />
        <result column="teacher_name" jdbcType="VARCHAR" property="teacherName" />
        <result column="subject_name" jdbcType="VARCHAR" property="subjectName" />
        <result column="address" jdbcType="VARCHAR" property="address" />
        <result column="classify" jdbcType="VARCHAR" property="classify" />
        <result column="editor_id" jdbcType="BIGINT" property="editorId" />
        <result column="editor_name" jdbcType="VARCHAR" property="editorName" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    </resultMap>
    <resultMap id="ResultMap" type="com.zhzx.server.domain.PublicCourse" extends="BaseResultMap">
        <association column="academic_year_semester_id" property="academicYearSemester" javaType="com.zhzx.server.domain.AcademicYearSemester"
                     select="com.zhzx.server.repository.AcademicYearSemesterMapper.selectById" />
        <association column="schoolyard_id" property="schoolyard" javaType="com.zhzx.server.domain.Schoolyard"
                     select="com.zhzx.server.repository.SchoolyardMapper.selectById" />
        <association column="grade_id" property="grade" javaType="com.zhzx.server.domain.Grade"
                     select="com.zhzx.server.repository.GradeMapper.selectById" />
        <association column="teacher_id" property="teacher" javaType="com.zhzx.server.domain.Staff"
                     select="com.zhzx.server.repository.StaffMapper.selectById" />
    </resultMap>
    <sql id="Base_Column_List">
        `id`, `academic_year_semester_id`, `schoolyard_id`, `grade_id`, `start_time`, `sort_order`, `course_name`, `clazz_id`, `clazz_name`, `teacher_id`, `teacher_name`, `subject_name`, `address`, `classify`, `editor_id`, `editor_name`, `create_time`, `update_time`
    </sql>
    <sql id="Base_Column_List_With_Prefix">
        t.`id`, t.`academic_year_semester_id`, t.`schoolyard_id`, t.`grade_id`, t.`start_time`, t.`sort_order`, t.`course_name`, t.`clazz_id`, t.`clazz_name`, t.`teacher_id`, t.`teacher_name`, t.`subject_name`, t.`address`, t.`classify`, t.`editor_id`, t.`editor_name`, t.`create_time`, t.`update_time`
    </sql>
    <insert id="batchInsert">
        insert into sys_public_course (
            `academic_year_semester_id`, `schoolyard_id`, `grade_id`, `start_time`, `sort_order`, `course_name`, `clazz_id`, `clazz_name`, `teacher_id`, `teacher_name`, `subject_name`, `address`, `classify`, `editor_id`, `editor_name`
        )
        values
        <foreach collection="records" item="record" separator=",">
        (
            #{record.academicYearSemesterId, jdbcType=BIGINT}, #{record.schoolyardId, jdbcType=BIGINT}, #{record.gradeId, jdbcType=BIGINT}, #{record.startTime, jdbcType=TIMESTAMP}, #{record.sortOrder, jdbcType=VARCHAR}, #{record.courseName, jdbcType=VARCHAR}, #{record.clazzId, jdbcType=VARCHAR}, #{record.clazzName, jdbcType=VARCHAR}, #{record.teacherId, jdbcType=BIGINT}, #{record.teacherName, jdbcType=VARCHAR}, #{record.subjectName, jdbcType=VARCHAR}, #{record.address, jdbcType=VARCHAR}, #{record.classify, jdbcType=VARCHAR}, #{record.editorId, jdbcType=BIGINT}, #{record.editorName, jdbcType=VARCHAR}
        )
        </foreach>
    </insert>
    <update id="updateAllFieldsById" parameterType="com.zhzx.server.domain.PublicCourse">
        update sys_public_course set
        <trim suffixOverrides=",">
            academic_year_semester_id = #{et.academicYearSemesterId, jdbcType=BIGINT},
            schoolyard_id = #{et.schoolyardId, jdbcType=BIGINT},
            grade_id = #{et.gradeId, jdbcType=BIGINT},
            start_time = #{et.startTime, jdbcType=TIMESTAMP},
            sort_order = #{et.sortOrder, jdbcType=VARCHAR},
            course_name = #{et.courseName, jdbcType=VARCHAR},
            clazz_id = #{et.clazzId, jdbcType=VARCHAR},
            clazz_name = #{et.clazzName, jdbcType=VARCHAR},
            teacher_id = #{et.teacherId, jdbcType=BIGINT},
            teacher_name = #{et.teacherName, jdbcType=VARCHAR},
            subject_name = #{et.subjectName, jdbcType=VARCHAR},
            address = #{et.address, jdbcType=VARCHAR},
            classify = #{et.classify, jdbcType=VARCHAR},
            editor_id = #{et.editorId, jdbcType=BIGINT},
            editor_name = #{et.editorName, jdbcType=VARCHAR},
        </trim>
        where id = #{et.id}
    </update>
    <!-- 根据主键查询 -->
    <select id="selectById" parameterType="java.io.Serializable" resultMap="ResultMap">
        select
        <include refid="Base_Column_List" />
        from sys_public_course
        where id = #{id}
    </select>
    <!-- 根据Wrapper查询 -->
    <select id="selectOne" resultMap="ResultMap">
        select
        <include refid="Base_Column_List" />
        from sys_public_course
        ${ew.customSqlSegment}
        LIMIT 1
    </select>
    <!-- 根据Wrapper查询 -->
    <select id="selectPage" resultMap="ResultMap">
        select
        <include refid="Base_Column_List" />
        from sys_public_course
        ${ew.customSqlSegment}
    </select>
</mapper>
